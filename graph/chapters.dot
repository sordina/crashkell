
subgraph cluster_strings {
	label="Strings";
	about;
	hello;
	raven;
	parens;
	combining;
	variables;
	case;
	wildcards;
	types;
	annotations;
	bottles;

	about -> hello;
	raven -> hello;
	hello -> parens;
	parens -> combining;
	combining -> variables;
	variables -> case;
	variables -> types;
	variables -> annotations;
	case -> wildcards;
	types -> annotations;
	variables -> bottles;
	combining -> bottles;
	annotations -> bottles;
}

subgraph cluster_tuples {
	label="Tuples";
	constructing;
	nesting;
	getting;

	constructing -> getting -> nesting;

	hello -> constructing;
}

subgraph cluster_numbers {
	label="Numbers";
	arithmetic;
	bfimdas;
	predecessors;
	integers;
	pythagoras;

	arithmetic -> bfimdas;
	case -> bfimdas;
	arithmetic -> predecessors;
	types -> integers;
	arithmetic -> integers;
	bfimdas -> pythagoras;
	annotations -> pythagoras;

	constructing -> arithmetic;
}

subgraph cluster_booleans {
	label="Booleans";
	truth;
	equality;
	not;
	if;

	pythagoras -> equality;
	wildcards -> truth;
	truth -> if;
	equality -> if;
	if -> not;
}

subgraph cluster_functions {
	label="Functions";
	hypotenuse;
	matching;
	guards;
	operators;
	referencing;
	recursion;
	collatz;
	currying;
	higher;

	hypotenuse -> matching;
	hypotenuse -> guards;
	matching -> guards;
	hypotenuse -> operators;
	operators -> referencing;
	hypotenuse -> recursion;
	guards -> recursion;
	recursion -> collatz;
	hypotenuse -> currying;
	operators -> higher;
	recursion -> higher;
	collatz -> higher;
	currying -> higher;
	referencing -> higher;

	bfimdas -> hypotenuse;
	not -> operators;
}

subgraph cluster_lists {
	label="Lists";
	onetwothree;
	cons;
	product;
	enumeration;
	sort;
	map;
	index;
	eulermap;

	onetwothree -> product;
	cons -> sort;
	product -> sort;
	sort -> map;
	sort -> index;
	map -> index;
	map -> eulermap;

	getting -> sort;
	guards -> sort;
	recursion -> sort;
	higher -> map;
	enumeration -> index;
}

subgraph cluster_patterns {
	label="Patterns";
	patuple;
	nth;
	nested;
	named;
	ignored;
	patsort;

	nth -> nested;
	nth -> named;
	nth -> ignored;
	patuple -> nested;
	patuple -> named;
	nested -> patsort;
	named -> patsort;
	ignored -> patsort;

	hypotenuse -> nth;
	onetwothree -> nth;
	sort -> patsort;

}

subgraph cluster_lambdas {
	label="Lambdas";
	exclaim;
	mappiply;
	indexL;

	exclaim -> mappiply;
	mappiply -> indexL;

	map -> exclaim;
	index -> indexL;
}

subgraph cluster_data {
	label="Data";
	disjunction;
	building;
	animals;

	disjunction -> building -> animals;

	patsort -> building;
	exclaim -> animals;
}

subgraph cluster_classes {
	label="Classes";
	noisy;
	print;
	sequencing;

	noisy -> print -> sequencing;

	animals -> noisy;

}

subgraph cluster_imports {
	label="Imports";
	mandelbrot;
	maze;

	mandelbrot -> maze;
	indexL -> mandelbrot;
	sequencing -> mandelbrot;

}


